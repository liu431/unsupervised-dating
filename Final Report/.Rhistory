data <- read_csv(here("Data", "final_okcupid.csv"))
library(tidyverse)
library(here)
library(cluster)
library(FactoMineR)
library(factoextra)
library(NbClust)
library(dbscan)
library(cowplot)
library(skimr)
library(ggcorrplot)
library(missMDA)
library(cluster)
library(data.table)
data <- read_csv(here("Data", "final_okcupid.csv"))
library(tidyverse)
library(here)
library(cluster)
library(FactoMineR)
library(factoextra)
library(NbClust)
library(dbscan)
library(cowplot)
library(skimr)
library(ggcorrplot)
library(missMDA)
library(cluster)
library(data.table)
data <- read_csv(here("Data", "final_okcupid.csv"))
library(tidyverse)
library(here)
library(cluster)
library(FactoMineR)
library(factoextra)
library(NbClust)
library(dbscan)
library(cowplot)
library(skimr)
library(ggcorrplot)
library(missMDA)
library(cluster)
library(data.table)
setwd('C:/Users/lliu9/Desktop/UML_Project/unsupervised-dating/Final Report')
data <- read_csv(here("Data", "final_okcupid.csv"))
library(tidyverse)
library(here)
library(cluster)
library(FactoMineR)
library(factoextra)
library(NbClust)
library(dbscan)
library(cowplot)
library(skimr)
library(ggcorrplot)
library(missMDA)
library(cluster)
library(data.table)
setwd('C:/Users/lliu9/Desktop/UML_Project/unsupervised-dating')
data <- read_csv(here("Data", "final_okcupid.csv"))
library(tidyverse)
library(here)
library(cluster)
library(FactoMineR)
library(factoextra)
library(NbClust)
library(dbscan)
library(cowplot)
library(skimr)
library(ggcorrplot)
library(missMDA)
library(cluster)
library(data.table)
setwd('C:/Users/lliu9/Desktop/UML_Project/unsupervised-dating')
data <- read_csv(here("Data", "final_okcupid.csv"))
library(tidyverse)
library(here)
library(cluster)
library(FactoMineR)
library(factoextra)
library(NbClust)
library(dbscan)
library(cowplot)
library(skimr)
library(ggcorrplot)
library(missMDA)
library(cluster)
library(data.table)
setwd('C:/Users/lliu9/Desktop/UML_Project/unsupervised-dating/Final Report')
data <- read_csv(here("Data", "final_okcupid.csv"))
getwd()
setwd('C:/Users/lliu9/Desktop/UML_Project/unsupervised-dating/Final Report')
getwd()
read_csv(here("Data", "final_okcupid.csv"))
?here
library(tidyverse)
library(here)
library(cluster)
library(FactoMineR)
library(factoextra)
library(NbClust)
library(dbscan)
library(cowplot)
library(skimr)
library(ggcorrplot)
library(missMDA)
library(cluster)
library(data.table)
setwd('C:/Users/lliu9/Desktop/UML_Project/unsupervised-dating/Data')
data <- read_csv(here("Data", "final_okcupid.csv"))
library(tidyverse)
library(here)
library(cluster)
library(FactoMineR)
library(factoextra)
library(NbClust)
library(dbscan)
library(cowplot)
library(skimr)
library(ggcorrplot)
library(missMDA)
library(cluster)
library(data.table)
setwd('C:/Users/lliu9/Desktop/UML_Project/unsupervised-dating/Data')
data <- read_csv("final_okcupid.csv")
data <- sample_n(data, 2000)
demo <- data[c('fit', 'edu', 'height_group', 'race_ethnicity')]
gower_demo <- demo %>%
mutate_all(factor) %>%
daisy(metric = "gower")
set.seed(123)
kmeans <- kmeans(gower_demo,
centers  = 3,
nstart = 15)
data_sample$kmeanscluster = as.factor(kmeans$cluster)
text <- data_sample[c('essay0')]
library(tidyverse)
library(here)
library(cluster)
library(FactoMineR)
library(factoextra)
library(NbClust)
library(dbscan)
library(cowplot)
library(skimr)
library(ggcorrplot)
library(missMDA)
library(cluster)
library(data.table)
setwd('C:/Users/lliu9/Desktop/UML_Project/unsupervised-dating/Data')
data <- read_csv("final_okcupid.csv")
data_sample <- sample_n(data, 2000)
demo <- data_sample[c('fit', 'edu', 'height_group', 'race_ethnicity')]
gower_demo <- demo %>%
mutate_all(factor) %>%
daisy(metric = "gower")
set.seed(123)
kmeans <- kmeans(gower_demo,
centers  = 3,
nstart = 15)
text <- data_sample[c('essay0')]
text <- data_sample[c('cleaned_text')]
text <- data_sample[c('clean_text')]
text$kmeanscluster = as.factor(kmeans$cluster)
write_csv(text, 'essay0.csv')
data_sample$kmeanscluster = as.factor(kmeans$cluster)
# Inspect the kmeans object
str(kmeans)
fviz_cluster(kmeans, gower_demo)
library(fpc)
#Calinski Harabasz index
clustering.ch <- kmeansruns(gower_demo,krange = 1:5,criterion = "ch")
#average silhouette width
clustering.asw <- kmeansruns(gower_demo,krange = 1:5,criterion = "asw")
critframe <- data.frame(k=1:10, ch=scale(clustering.ch$crit),
asw=scale(clustering.asw$crit))
critframe <- melt(critframe, id.vars=c("k"), variable.name="measure",
value.name="score")
ggplot(critframe, aes(x=k, y=score, color=measure)) +
geom_point(aes(shape=measure)) + geom_line(aes(linetype=measure)) +
scale_x_continuous(breaks=1:10, labels=1:10)
knitr::opts_chunk$set(echo = FALSE)
library(stm)
library(quanteda)
library(topicmodels)
library(tidytext)
library(ggplot2)
library(dplyr)
library(tidyr)
library(scales)
library(tm)
library(grid)
library(wordcloud)
library(wordcloud2)
library(tidyverse)
library(igraph)
library(stmCorrViz)
# Positive correlations between topics indicate that both topics are likely to be discussed within a document.
mod.out.corr <- topicCorr(Fit)
knitr::opts_chunk$set(echo = FALSE)
library(stm)
library(quanteda)
library(topicmodels)
library(tidytext)
library(ggplot2)
library(dplyr)
library(tidyr)
library(scales)
library(tm)
library(grid)
library(wordcloud)
library(wordcloud2)
library(tidyverse)
library(igraph)
library(stmCorrViz)
setwd('C:/Users/lliu9/Desktop/UML_Project/unsupervised-dating')
#cleaned okcupid data
data <- read_csv(here("Data", "final_okcupid.csv"))
setwd('C:/Users/lliu9/Desktop/UML_Project/unsupervised-dating/Data')
#cleaned okcupid data
data <- read_csv("final_okcupid.csv")
#data <- sample_n(essay, 100)
data <- data[c('clean_text', 'fit', 'edu', 'height_group', 'race_ethnicity', 'dbscan_cluster')]
Fit <- stm(documents = out$documents, vocab = out$vocab,
K = 9, prevalence =~ fit + edu + height_group + race_ethnicity+dbscan_cluster,
max.em.its = 50, data = out$meta,
init.type = "Spectral", verbose=FALSE)
processed <- textProcessor(data$clean_text, metadata = data)
out <- prepDocuments(processed$documents, processed$vocab,
processed$meta, lower.thresh = 0)
docs <- out$documents
vocab <- out$vocab
meta <-out$meta
Fit <- stm(documents = out$documents, vocab = out$vocab,
K = 9, prevalence =~ fit + edu + height_group + race_ethnicity+dbscan_cluster,
max.em.its = 50, data = out$meta,
init.type = "Spectral", verbose=FALSE)
# Positive correlations between topics indicate that both topics are likely to be discussed within a document.
mod.out.corr <- topicCorr(Fit)
# Graphical display of topic correlations.
jpeg('network.jpeg')
plot(mod.out.corr)
dev.off()
paste('topic', str(1), '.jpg', sep='')
for (i in seq(1:9)){
name <- paste('topic', str(i), '.jpg', sep='')
jpeg(name, width = 350, height = "350")
cloud(Fit, topic = i, scale = c(4,0.2) )
dev.off()}
for (i in seq(1:9)){
name <- paste('topic', str(i), '.jpg', sep='')
jpeg(name)
cloud(Fit, topic = i, scale = c(4,0.2) )
dev.off()}
getwd()
for (i in seq(1:9)){
name <- paste('topic', str(i), '.jpg', sep='')
jpeg(name)
cloud(Fit, topic = i, scale = c(4,0.2) )
dev.off()}
for (i in seq(1:9)){
name <- paste('topic', str(i), '.jpg', sep='')
jpeg(name)
cloud(Fit, topic = i, scale = c(4,0.2) )
dev.off}
cloud(Fit, topic = 1, scale = c(4,0.2))
cloud(Fit, topic = 1, scale = c(4,0.2))
cloud(Fit, topic = 1)
cloud(Fit, topic = 1)
for (i in seq(1:9)){
name <- paste('topic', str(i), '.jpg', sep='')
jpeg(name)
cloud(Fit, topic = i, scale = c(4,0.2) )
dev.off}
for (i in seq(1:9)){
#name <- paste('topic', str(i), '.jpg', sep='')
#jpeg(name)
cloud(Fit, topic = i, scale = c(4,0.2) )
#dev.off}
for (i in seq(1:9)){
#name <- paste('topic', str(i), '.jpg', sep='')
#jpeg(name)
cloud(Fit, topic = i, scale = c(4,0.2) )}
#dev.off}
knitr::opts_chunk$set(echo = FALSE)
library(stm)
library(quanteda)
library(topicmodels)
library(tidytext)
library(ggplot2)
library(dplyr)
library(tidyr)
library(scales)
library(tm)
library(grid)
library(wordcloud)
library(wordcloud2)
library(tidyverse)
library(igraph)
library(stmCorrViz)
for (i in seq(1:9)){
#name <- paste('topic', str(i), '.jpg', sep='')
#jpeg(name, width = 350, height = "350")
cloud(Fit, topic = i, scale = c(4,0.2) )}
# Graphical display of topic correlations.
plot(mod.out.corr)
